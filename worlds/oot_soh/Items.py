from typing import Dict, NamedTuple, TYPE_CHECKING
from enum import IntEnum
from BaseClasses import Item, ItemClassification as IC
from .Enums import *


class SohItem(Item):
    game = "Ship of Harkinian"


# for convenience for things like songs and magic
class ItemType(IntEnum):
    none = 0
    song = 1
    magic = 2  # things that cost magic


class SohItemData(NamedTuple):
    item_id: int
    classification: IC
    quantity_in_item_pool: int
    item_type: int = ItemType.none
    child_only: bool = False
    adult_only: bool = False
    # todo: fill out more item groups
    item_groups: list[str] = []  # for item_name_groups


item_data_table: Dict[Items, SohItemData] = {
    # Items commented out that can never appear in the item pool and are only used on Ship internally

    Items.KOKIRI_SWORD: SohItemData(1, IC.progression, 1, child_only=True, item_groups=["Swords"]),
    Items.MASTER_SWORD: SohItemData(2, IC.progression, 0, adult_only=True, item_groups=["Swords"]),
    Items.GIANTS_KNIFE: SohItemData(3, IC.progression, 0, adult_only=True, item_groups=["Swords"]),
    Items.BIGGORONS_SWORD: SohItemData(4, IC.progression, 1, adult_only=True, item_groups=["Swords"]),
    Items.DEKU_SHIELD: SohItemData(5, IC.useful, 1, child_only=True, item_groups=["Shields"]),
    Items.HYLIAN_SHIELD: SohItemData(6, IC.useful, 1, item_groups=["Shields"]),
    Items.MIRROR_SHIELD: SohItemData(7, IC.progression, 1, adult_only=True, item_groups=["Shields"]),
    Items.GORON_TUNIC: SohItemData(8, IC.progression, 1, adult_only=True),
    Items.ZORA_TUNIC: SohItemData(9, IC.progression, 1, adult_only=True),
    Items.IRON_BOOTS: SohItemData(10, IC.progression, 1, adult_only=True),
    Items.HOVER_BOOTS: SohItemData(11, IC.progression, 1, adult_only=True),
    Items.BOOMERANG: SohItemData(12, IC.progression, 1, child_only=True),
    Items.LENS_OF_TRUTH: SohItemData(13, IC.progression, 1, item_type=ItemType.magic),
    Items.MEGATON_HAMMER: SohItemData(14, IC.progression, 1, adult_only=True),
    Items.STONE_OF_AGONY: SohItemData(15, IC.progression, 1),
    Items.DINS_FIRE: SohItemData(16, IC.progression, 1, item_type=ItemType.magic),
    Items.FARORES_WIND: SohItemData(17, IC.progression, 1, item_type=ItemType.magic),
    Items.NAYRUS_LOVE: SohItemData(18, IC.progression, 1, item_type=ItemType.magic),
    Items.FIRE_ARROW: SohItemData(19, IC.progression, 1, adult_only=True, item_type=ItemType.magic),
    Items.ICE_ARROW: SohItemData(20, IC.progression, 1, adult_only=True, item_type=ItemType.magic),
    Items.LIGHT_ARROW: SohItemData(21, IC.progression, 1, adult_only=True, item_type=ItemType.magic),
    Items.GERUDO_MEMBERSHIP_CARD: SohItemData(22, IC.progression, 1),
    Items.MAGIC_BEAN: SohItemData(23, IC.progression, 0, child_only=True),
    Items.MAGIC_BEAN_PACK: SohItemData(24, IC.progression, 0, child_only=True),
    Items.DOUBLE_DEFENSE: SohItemData(25, IC.useful, 1),
    Items.WEIRD_EGG: SohItemData(26, IC.progression, 0, child_only=True),
    Items.ZELDAS_LETTER: SohItemData(27, IC.progression, 0, child_only=True),
    Items.POCKET_EGG: SohItemData(28, IC.progression, 0, adult_only=True),
    Items.COJIRO: SohItemData(29, IC.progression, 0, adult_only=True),
    Items.ODD_MUSHROOM: SohItemData(30, IC.progression, 0, adult_only=True),
    Items.ODD_POTION: SohItemData(31, IC.progression, 0, adult_only=True),
    Items.POACHERS_SAW: SohItemData(32, IC.progression, 0, adult_only=True),
    Items.BROKEN_GORONS_SWORD: SohItemData(33, IC.progression, 0, adult_only=True),
    Items.PRESCRIPTION: SohItemData(34, IC.progression, 0, adult_only=True),
    Items.EYEBALL_FROG: SohItemData(35, IC.progression, 0, adult_only=True),
    Items.WORLDS_FINEST_EYEDROPS: SohItemData(36, IC.progression, 0, adult_only=True),
    Items.CLAIM_CHECK: SohItemData(37, IC.progression, 1, adult_only=True),
    Items.GOLD_SKULLTULA_TOKEN: SohItemData(38, IC.progression_skip_balancing, 0),
    Items.PROGRESSIVE_HOOKSHOT: SohItemData(39, IC.progression, 2),
    Items.STRENGTH_UPGRADE: SohItemData(40, IC.progression, 3),
    Items.PROGRESSIVE_BOMB_BAG: SohItemData(41, IC.progression, 3),
    Items.PROGRESSIVE_BOW: SohItemData(42, IC.progression, 3),
    Items.PROGRESSIVE_SLINGSHOT: SohItemData(43, IC.progression, 3),
    Items.PROGRESSIVE_WALLET: SohItemData(44, IC.progression, 3),
    Items.PROGRESSIVE_SCALE: SohItemData(45, IC.progression, 2),
    Items.PROGRESSIVE_NUT_CAPACITY: SohItemData(46, IC.progression, 2),
    Items.PROGRESSIVE_STICK_CAPACITY: SohItemData(47, IC.progression, 2),
    Items.PROGRESSIVE_BOMBCHU: SohItemData(48, IC.progression, 0),
    Items.PROGRESSIVE_MAGIC_METER: SohItemData(49, IC.progression, 2),
    #Items.MAGIC_SINGLE: SohItemData( 50, IC.filler, 0 ),
    #Items.MAGIC_DOUBLE: SohItemData( 51, IC.filler, 0 ),
    Items.PROGRESSIVE_OCARINA: SohItemData(52, IC.progression, 2),
    Items.PROGRESSIVE_GORON_SWORD: SohItemData(53, IC.progression, 0),
    Items.EMPTY_BOTTLE: SohItemData(54, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_MILK: SohItemData(55, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_RED_POTION: SohItemData(56, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_GREEN_POTION: SohItemData(57, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_BLUE_POTION: SohItemData(58, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_FAIRY: SohItemData(59, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_FISH: SohItemData(60, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_BLUE_FIRE: SohItemData(61, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_BUGS: SohItemData(62, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_POE: SohItemData(63, IC.progression, 0, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_RUTOS_LETTER: SohItemData(64, IC.progression, 1, child_only=True, item_groups=["Bottles"]),
    Items.BOTTLE_WITH_BIG_POE: SohItemData(65, IC.progression, 1, item_groups=["Bottles"]),
    Items.ZELDAS_LULLABY: SohItemData(66, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.EPONAS_SONG: SohItemData(67, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.SARIAS_SONG: SohItemData(68, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.SUNS_SONG: SohItemData(69, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.SONG_OF_TIME: SohItemData(70, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.SONG_OF_STORMS: SohItemData(71, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.MINUET_OF_FOREST: SohItemData(72, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.BOLERO_OF_FIRE: SohItemData(73, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.SERENADE_OF_WATER: SohItemData(74, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.REQUIEM_OF_SPIRIT: SohItemData(75, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.NOCTURNE_OF_SHADOW: SohItemData(76, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.PRELUDE_OF_LIGHT: SohItemData(77, IC.progression, 1, item_type=ItemType.song, item_groups=["Songs"]),
    Items.GREAT_DEKU_TREE_MAP: SohItemData(78, IC.useful, 0),
    Items.DODONGOS_CAVERN_MAP: SohItemData(79, IC.useful, 0),
    Items.JABU_JABUS_BELLY_MAP: SohItemData(80, IC.useful, 0),
    Items.FOREST_TEMPLE_MAP: SohItemData(81, IC.useful, 0),
    Items.FIRE_TEMPLE_MAP: SohItemData(82, IC.useful, 0),
    Items.WATER_TEMPLE_MAP: SohItemData(83, IC.useful, 0),
    Items.SPIRIT_TEMPLE_MAP: SohItemData(84, IC.useful, 0),
    Items.SHADOW_TEMPLE_MAP: SohItemData(85, IC.useful, 0),
    Items.BOTTOM_OF_THE_WELL_MAP: SohItemData(86, IC.useful, 0),
    Items.ICE_CAVERN_MAP: SohItemData(87, IC.useful, 0),
    Items.GREAT_DEKU_TREE_COMPASS: SohItemData(88, IC.useful, 0),
    Items.DODONGOS_CAVERN_COMPASS: SohItemData(89, IC.useful, 0),
    Items.JABU_JABUS_BELLY_COMPASS: SohItemData(90, IC.useful, 0),
    Items.FOREST_TEMPLE_COMPASS: SohItemData(91, IC.useful, 0),
    Items.FIRE_TEMPLE_COMPASS: SohItemData(92, IC.useful, 0),
    Items.WATER_TEMPLE_COMPASS: SohItemData(93, IC.useful, 0),
    Items.SPIRIT_TEMPLE_COMPASS: SohItemData(94, IC.useful, 0),
    Items.SHADOW_TEMPLE_COMPASS: SohItemData(95, IC.useful, 0),
    Items.BOTTOM_OF_THE_WELL_COMPASS: SohItemData(96, IC.useful, 0),
    Items.ICE_CAVERN_COMPASS: SohItemData(97, IC.useful, 0),
    Items.FOREST_TEMPLE_BOSS_KEY: SohItemData(98, IC.progression, 1, item_groups=["Keys"]),
    Items.FIRE_TEMPLE_BOSS_KEY: SohItemData(99, IC.progression, 1, item_groups=["Keys"]),
    Items.WATER_TEMPLE_BOSS_KEY: SohItemData(100, IC.progression, 1, item_groups=["Keys"]),
    Items.SPIRIT_TEMPLE_BOSS_KEY: SohItemData(101, IC.progression, 1, item_groups=["Keys"]),
    Items.SHADOW_TEMPLE_BOSS_KEY: SohItemData(102, IC.progression, 1, item_groups=["Keys"]),
    Items.GANONS_CASTLE_BOSS_KEY: SohItemData(103, IC.progression, 0, item_groups=["Keys"]),
    Items.FOREST_TEMPLE_SMALL_KEY: SohItemData(104, IC.progression, 5, item_groups=["Keys"]),
    Items.FIRE_TEMPLE_SMALL_KEY: SohItemData(105, IC.progression, 8, item_groups=["Keys"]),
    Items.WATER_TEMPLE_SMALL_KEY: SohItemData(106, IC.progression, 6, item_groups=["Keys"]),
    Items.SPIRIT_TEMPLE_SMALL_KEY: SohItemData(107, IC.progression, 5, item_groups=["Keys"]),
    Items.SHADOW_TEMPLE_SMALL_KEY: SohItemData(108, IC.progression, 6, item_groups=["Keys"]),
    Items.BOTTOM_OF_THE_WELL_SMALL_KEY: SohItemData(109, IC.progression, 3, item_groups=["Keys"]),
    Items.TRAINING_GROUND_SMALL_KEY: SohItemData(110, IC.progression, 9, item_groups=["Keys"]),
    Items.GERUDO_FORTRESS_SMALL_KEY: SohItemData(111, IC.progression, 4, item_groups=["Keys"]),
    Items.GANONS_CASTLE_SMALL_KEY: SohItemData(112, IC.progression, 2, item_groups=["Keys"]),
    Items.TREASURE_GAME_SMALL_KEY: SohItemData(113, IC.progression, 0, item_groups=["Keys"]),
    Items.FOREST_TEMPLE_KEY_RING: SohItemData(114, IC.progression, 0, item_groups=["Keys"]),
    Items.FIRE_TEMPLE_KEY_RING: SohItemData(115, IC.progression, 0, item_groups=["Keys"]),
    Items.WATER_TEMPLE_KEY_RING: SohItemData(116, IC.progression, 0, item_groups=["Keys"]),
    Items.SPIRIT_TEMPLE_KEY_RING: SohItemData(117, IC.progression, 0, item_groups=["Keys"]),
    Items.SHADOW_TEMPLE_KEY_RING: SohItemData(118, IC.progression, 0, item_groups=["Keys"]),
    Items.BOTTOM_OF_THE_WELL_KEY_RING: SohItemData(119, IC.progression, 0, item_groups=["Keys"]),
    Items.TRAINING_GROUND_KEY_RING: SohItemData(120, IC.progression, 0, item_groups=["Keys"]),
    Items.GERUDO_FORTRESS_KEY_RING: SohItemData(121, IC.progression, 0, item_groups=["Keys"]),
    Items.GANONS_CASTLE_KEY_RING: SohItemData(122, IC.progression, 0, item_groups=["Keys"]),
    Items.TREASURE_GAME_KEY_RING: SohItemData(123, IC.progression, 0, item_groups=["Keys"]),
    Items.KOKIRIS_EMERALD: SohItemData(124, IC.progression, 0, item_groups=["Stones"]),
    Items.GORONS_RUBY: SohItemData(125, IC.progression, 0, item_groups=["Stones"]),
    Items.ZORAS_SAPPHIRE: SohItemData(126, IC.progression, 0, item_groups=["Stones"]),
    Items.FOREST_MEDALLION: SohItemData(127, IC.progression, 0, item_groups=["Medallions"]),
    Items.FIRE_MEDALLION: SohItemData(128, IC.progression, 0, item_groups=["Medallions"]),
    Items.WATER_MEDALLION: SohItemData(129, IC.progression, 0, item_groups=["Medallions"]),
    Items.SPIRIT_MEDALLION: SohItemData(130, IC.progression, 0, item_groups=["Medallions"]),
    Items.SHADOW_MEDALLION: SohItemData(131, IC.progression, 0, item_groups=["Medallions"]),
    Items.LIGHT_MEDALLION: SohItemData(132, IC.progression, 0, item_groups=["Medallions"]),
    Items.RECOVERY_HEART: SohItemData(133, IC.filler, 0),
    Items.GREEN_RUPEE: SohItemData(134, IC.filler, 0),
    Items.GREG_THE_GREEN_RUPEE: SohItemData(135, IC.progression, 1),
    Items.BLUE_RUPEE: SohItemData(136, IC.filler, 0),
    Items.RED_RUPEE: SohItemData(137, IC.filler, 0),
    Items.PURPLE_RUPEE: SohItemData(138, IC.filler, 0),
    Items.HUGE_RUPEE: SohItemData(139, IC.filler, 0),
    Items.PIECE_OF_HEART: SohItemData(140, IC.useful, 35),
    Items.HEART_CONTAINER: SohItemData(141, IC.progression, 8),
    Items.ICE_TRAP: SohItemData(142, IC.trap, 6),
    #Items.MILK: SohItemData( 143, ),
    #Items.FISH: SohItemData( 144, ),
    Items.BOMBS_5: SohItemData(145, IC.filler, 0),
    Items.BOMBS_10: SohItemData(146, IC.filler, 0),
    Items.BOMBS_20: SohItemData(147, IC.filler, 0),
    Items.BOMBCHUS_5: SohItemData(148, IC.filler, 1),
    Items.BOMBCHUS_10: SohItemData(149, IC.filler, 3),
    Items.BOMBCHUS_20: SohItemData(150, IC.filler, 1),
    Items.ARROWS_5: SohItemData(151, IC.filler, 0),
    Items.ARROWS_10: SohItemData(152, IC.filler, 0),
    Items.ARROWS_30: SohItemData(153, IC.filler, 0),
    Items.DEKU_NUTS_5: SohItemData(154, IC.filler, 0),
    Items.DEKU_NUTS_10: SohItemData(155, IC.filler, 0),
    Items.DEKU_SEEDS_30: SohItemData(156, IC.filler, 0),
    Items.DEKU_STICK_1: SohItemData(157, IC.filler, 0),
    #Items.RED_POTION_REFILL: SohItemData( 158, IC.filler, 0 ),
    #Items.GREEN_POTION_REFILL: SohItemData( 159, IC.filler, 0 ),
    #Items.BLUE_POTION_REFILL: SohItemData( 160, IC.filler, 0 ),
    Items.PIECE_OF_HEART_WINNER: SohItemData(161, IC.progression, 1),
    #Items.TREASURE_GAME_GREEN_RUPEE: SohItemData( 162, IC.filler, 0 ),
    Items.BUY_DEKU_NUTS5: SohItemData(163, IC.filler, 0),
    Items.BUY_ARROWS30: SohItemData(164, IC.filler, 0),
    Items.BUY_ARROWS50: SohItemData(165, IC.filler, 0),
    Items.BUY_BOMBS525: SohItemData(166, IC.filler, 0),
    Items.BUY_DEKU_NUTS10: SohItemData(167, IC.filler, 0),
    Items.BUY_DEKU_STICK1: SohItemData(168, IC.filler, 0),
    Items.BUY_BOMBS10: SohItemData(169, IC.filler, 0),
    Items.BUY_FISH: SohItemData(170, IC.filler, 0),
    Items.BUY_RED_POTION30: SohItemData(171, IC.filler, 0),
    Items.BUY_GREEN_POTION: SohItemData(172, IC.filler, 0),
    Items.BUY_BLUE_POTION: SohItemData(173, IC.filler, 0),
    Items.BUY_HYLIAN_SHIELD: SohItemData(174, IC.filler, 0),
    Items.BUY_DEKU_SHIELD: SohItemData(175, IC.filler, 0),
    Items.BUY_GORON_TUNIC: SohItemData(176, IC.filler, 0),
    Items.BUY_ZORA_TUNIC: SohItemData(177, IC.filler, 0),
    Items.BUY_HEART: SohItemData(178, IC.filler, 0),
    Items.BUY_BOMBCHUS10: SohItemData(179, IC.filler, 0),
    Items.BUY_BOMBCHUS20: SohItemData(180, IC.filler, 0),
    Items.BUY_DEKU_SEEDS30: SohItemData(181, IC.filler, 0),
    #Items.SOLD_OUT: SohItemData( 182, IC.filler, 0 ),
    Items.BUY_BLUE_FIRE: SohItemData(183, IC.filler, 0),
    Items.BUY_BOTTLE_BUG: SohItemData(184, IC.filler, 0, item_groups=["Bottles"]),
    Items.BUY_POE: SohItemData(185, IC.filler, 0),
    Items.BUY_FAIRYS_SPIRIT: SohItemData(186, IC.filler, 0),
    Items.BUY_ARROWS10: SohItemData(187, IC.filler, 0),
    Items.BUY_BOMBS20: SohItemData(188, IC.filler, 0),
    Items.BUY_BOMBS30: SohItemData(189, IC.filler, 0),
    Items.BUY_BOMBS535: SohItemData(190, IC.filler, 0),
    Items.BUY_RED_POTION40: SohItemData(191, IC.filler, 0),
    Items.BUY_RED_POTION50: SohItemData(192, IC.filler, 0),
    #Items.TRIFORCE: SohItemData( 193, IC.progression, 0 ),
    Items.TRIFORCE_PIECE: SohItemData(194, IC.progression, 0),
    Items.GOHMAS_SOUL: SohItemData(195, IC.progression, 0),
    Items.KING_DODONGOS_SOUL: SohItemData(196, IC.progression, 0),
    Items.BARINADES_SOUL: SohItemData(197, IC.progression, 0),
    Items.PHANTOM_GANONS_SOUL: SohItemData(198, IC.progression, 0),
    Items.VOLVAGIAS_SOUL: SohItemData(199, IC.progression, 0),
    Items.MORPHAS_SOUL: SohItemData(200, IC.progression, 0),
    Items.BONGO_BONGOS_SOUL: SohItemData(201, IC.progression, 0),
    Items.TWINROVAS_SOUL: SohItemData(202, IC.progression, 0),
    Items.GANONS_SOUL: SohItemData(203, IC.progression, 0),
    Items.OCARINA_A_BUTTON: SohItemData(204, IC.progression, 0, item_groups=["Ocarina Buttons"]),
    Items.OCARINA_CUP_BUTTON: SohItemData(205, IC.progression, 0, item_groups=["Ocarina Buttons"]),
    Items.OCARINA_CDOWN_BUTTON: SohItemData(206, IC.progression, 0, item_groups=["Ocarina Buttons"]),
    Items.OCARINA_CLEFT_BUTTON: SohItemData(207, IC.progression, 0, item_groups=["Ocarina Buttons"]),
    Items.OCARINA_CRIGHT_BUTTON: SohItemData(208, IC.progression, 0, item_groups=["Ocarina Buttons"]),
    Items.SKELETON_KEY: SohItemData(209, IC.progression, 0),
    Items.FISHING_POLE: SohItemData(210, IC.progression, 0),
    #Items.DEKU_STICK_BAG: SohItemData( 211, IC.progression, 0 ),
    #Items.DEKU_NUT_BAG: SohItemData( 212, IC.progression, 0 ),
    #Items.HINT: SohItemData( 213, IC.filler, 0 ),
    #Items.TYCOON_WALLET: SohItemData( 214, IC.filler, 0 ),
    Items.BRONZE_SCALE: SohItemData( 215, IC.progression, 0 ),
    #Items.CHILD_WALLET: SohItemData( 216, IC.progression, 0 ),
    #Items.BOMBCHU_BAG: SohItemData( 217, IC.progression, 0 ),
    #Items.QUIVER_INF: SohItemData( 218, IC.filler, 0 ),
    #Items.BOMB_BAG_INF: SohItemData( 219, IC.filler, 0 ),
    #Items.BULLET_BAG_INF: SohItemData( 220, IC.filler, 0 ),
    #Items.STICK_UPGRADE_INF: SohItemData( 221, IC.filler, 0 ),
    #Items.NUT_UPGRADE_INF: SohItemData( 222, IC.filler, 0 ),
    #Items.MAGIC_INF: SohItemData( 223, IC.filler, 0 ),
    #Items.BOMBCHU_INF: SohItemData( 224, IC.filler, 0 ),
    #Items.WALLET_INF: SohItemData( 225, IC.filler, 0 ),
    #Items.FAIRY_OCARINA: SohItemData( 226, IC.filler, 0 ),
    #Items.OCARINA_OF_TIME: SohItemData( 227, IC.filler, 0 ),
    #Items.BOMB_BAG: SohItemData( 228, IC.filler, 0 ),
    #Items.BIG_BOMB_BAG: SohItemData( 229, IC.filler, 0 ),
    #Items.BIGGEST_BOMB_BAG: SohItemData( 230, IC.filler, 0 ),
    Items.FAIRY_BOW: SohItemData( 231, IC.filler, 0, adult_only=True),
    #Items.BIG_QUIVER: SohItemData( 232, IC.filler, 0 ),
    #Items.BIGGEST_QUIVER: SohItemData( 233, IC.filler, 0 ),
    Items.FAIRY_SLINGSHOT: SohItemData( 234, IC.filler, 0, child_only=True),
    #Items.BIG_BULLET_BAG: SohItemData( 235, IC.filler, 0 ),
    #Items.BIGGEST_BULLET_BAG: SohItemData( 236, IC.filler, 0 ),
    #Items.GORONS_BRACELET: SohItemData( 237, IC.filler, 0 ),
    #Items.SILVER_GAUNTLETS: SohItemData( 238, IC.filler, 0, adult_only=True),
    #Items.GOLDEN_GAUNTLETS: SohItemData( 239, IC.filler, 0, adult_only=True),
    #Items.SILVER_SCALE: SohItemData( 240, IC.filler, 0 ),
    #Items.GOLDEN_SCALE: SohItemData( 241, IC.filler, 0 ),
    #Items.ADULT_WALLET: SohItemData( 242, IC.filler, 0 ),
    #Items.GIANT_WALLET: SohItemData( 243, IC.filler, 0 ),
    #Items.DEKU_NUT_CAPACITY30: SohItemData( 244, IC.filler, 0 ),
    #Items.DEKU_NUT_CAPACITY40: SohItemData( 245, IC.filler, 0 ),
    #Items.DEKU_STICK_CAPACITY20: SohItemData( 246, IC.filler, 0 ),
    #Items.DEKU_STICK_CAPACITY30: SohItemData( 247, IC.filler, 0 ),
    Items.HOOKSHOT: SohItemData( 248, IC.filler, 0, adult_only=True),
    Items.LONGSHOT: SohItemData( 249, IC.filler, 0, adult_only=True),
    #Items.SCARECROW: SohItemData( 250, IC.filler, 0, adult_only=True),
    Items.GUARD_HOUSE_KEY: SohItemData(251, IC.progression, 0, item_groups=["Keys"]),
    Items.MARKET_BAZAAR_KEY: SohItemData(252, IC.progression, 0, item_groups=["Keys"]),
    Items.MARKET_POTION_SHOP_KEY: SohItemData(253, IC.progression, 0, item_groups=["Keys"]),
    Items.MASK_SHOP_KEY: SohItemData(254, IC.progression, 0, item_groups=["Keys"]),
    Items.MARKET_SHOOTING_GALLERY_KEY: SohItemData(255, IC.progression, 0, item_groups=["Keys"]),
    Items.BOMBCHU_BOWLING_KEY: SohItemData(256, IC.progression, 0, item_groups=["Keys"]),
    Items.TREASURE_CHEST_GAME_BUILDING_KEY: SohItemData(257, IC.progression, 0, item_groups=["Keys"]),
    Items.BOMBCHU_SHOP_KEY: SohItemData(258, IC.progression, 0, item_groups=["Keys"]),
    Items.RICHARDS_HOUSE_KEY: SohItemData(259, IC.progression, 0, item_groups=["Keys"]),
    Items.ALLEY_HOUSE_KEY: SohItemData(260, IC.progression, 0, item_groups=["Keys"]),
    Items.KAK_BAZAAR_KEY: SohItemData(261, IC.progression, 0, item_groups=["Keys"]),
    Items.KAK_POTION_SHOP_KEY: SohItemData(262, IC.progression, 0, item_groups=["Keys"]),
    Items.BOSS_HOUSE_KEY: SohItemData(263, IC.progression, 0, item_groups=["Keys"]),
    Items.GRANNYS_POTION_SHOP_KEY: SohItemData(264, IC.progression, 0, item_groups=["Keys"]),
    Items.SKULLTULA_HOUSE_KEY: SohItemData(265, IC.progression, 0, item_groups=["Keys"]),
    Items.IMPAS_HOUSE_KEY: SohItemData(266, IC.progression, 0, item_groups=["Keys"]),
    Items.WINDMILL_KEY: SohItemData(267, IC.progression, 0, item_groups=["Keys"]),
    Items.KAK_SHOOTING_GALLERY_KEY: SohItemData(268, IC.progression, 0, item_groups=["Keys"]),
    Items.DAMPES_HUT_KEY: SohItemData(269, IC.progression, 0, item_groups=["Keys"]),
    Items.TALONS_HOUSE_KEY: SohItemData(270, IC.progression, 0, item_groups=["Keys"]),
    Items.STABLES_KEY: SohItemData(271, IC.progression, 0, item_groups=["Keys"]),
    Items.BACK_TOWER_KEY: SohItemData(272, IC.progression, 0, item_groups=["Keys"]),
    Items.HYLIA_LAB_KEY: SohItemData(273, IC.progression, 0, item_groups=["Keys"]),
    Items.FISHING_HOLE_KEY: SohItemData(274, IC.progression, 0, item_groups=["Keys"]),
    #Items.DISTANT_SCARECROW: SohItemData( 275, IC.filler, 0, adult_only=True),
    Items.STICKS: SohItemData(276, IC.filler, 0, child_only=True),
    Items.NUTS: SohItemData(277, IC.filler, 0),
    #Items.EPONA: SohItemData( 278, IC.filler, 0 ),
    #Items.MAX: SohItemData( 279, IC.filler, 0 ),
}

item_table = {name.value: data.item_id for name, data in item_data_table.items() if data.item_id is not None}

filler_items = [
    Items.RECOVERY_HEART,
    Items.BLUE_RUPEE,
    Items.RED_RUPEE,
    Items.PURPLE_RUPEE,
    Items.HUGE_RUPEE,
    Items.BOMBS_5,
    Items.BOMBS_10,
    Items.ARROWS_5,
    Items.ARROWS_10,
    Items.DEKU_NUTS_5,
    Items.DEKU_NUTS_10,
    Items.DEKU_STICK_1
]

no_rules_bottles = [
    Items.EMPTY_BOTTLE,
    Items.BOTTLE_WITH_MILK,
    Items.BOTTLE_WITH_RED_POTION,
    Items.BOTTLE_WITH_GREEN_POTION,
    Items.BOTTLE_WITH_BLUE_POTION,
    Items.BOTTLE_WITH_FAIRY,
    Items.BOTTLE_WITH_FISH,
    Items.BOTTLE_WITH_BLUE_FIRE,
    Items.BOTTLE_WITH_BUGS,
]

filler_bottles = [
    *no_rules_bottles,
    Items.BOTTLE_WITH_POE,
]

all_bottles: list[Items] = [
    *filler_bottles,
    Items.BOTTLE_WITH_RUTOS_LETTER,
]

item_name_groups: dict[str, set[str]] = {}
for item, data in item_data_table.items():
    for group in data.item_groups:
        item_name_groups.setdefault(group, set()).add(item.value)
